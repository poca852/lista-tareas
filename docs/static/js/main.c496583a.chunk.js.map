{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c496583a.chunk.js","sourcesContent":["\n\nexport const todoReducer = ( state = [], action ) => {\n\n    switch ( action.type ) {\n        case 'add':\n            return [ ...state, action.payload ];\n\n        case 'delete':\n            return state.filter( todo => todo.id !== action.payload ); // 123123123\n\n\n        case 'toggle': \n            return state.map( todo => \n                ( todo.id === action.payload )\n                    ? { ...todo, done: !todo.done }\n                    : todo\n            );\n\n        case 'toggle-old':\n            return state.map( todo => {\n\n                if ( todo.id === action.payload ) {\n                    return {\n                        ...todo,\n                        done: !todo.done\n                    }\n                } else {\n                    return todo;\n                }\n\n            })\n\n        default:\n            return state;\n    }\n\n\n}","import React from 'react';\n\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\n\n\n    return (\n        <li\n            key={ todo.id }\n            className=\"list-group-item\"\n        >  \n            <p \n                className={ `${ todo.done && 'complete' }` }\n                onClick={ () => handleToggle( todo.id ) }\n            > \n                { index + 1}. { todo.desc }   \n            </p>\n            <button\n                className=\"btn btn-danger\"\n                onClick={ () => handleDelete( todo.id ) }\n            >\n                Borrar\n            </button>\n        </li>\n    )\n}\n","import React from 'react'\nimport { TodoListItem } from './TodoListItem'\n\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\n    return (\n        <ul className=\"list-group list-group-flush\">\n        {\n            todos.map( (todo, i) => (\n                <TodoListItem \n                    key={ todo.id }\n                    todo={ todo }\n                    index={ i }\n                    handleDelete={ handleDelete }\n                    handleToggle={ handleToggle }\n                />\n            ))\n        }\n    </ul>\n    )\n}\n","import React from 'react'\nimport { useForm } from '../../hooks/useForm';\n\nexport const TodoAdd = ({ handleAddTodo }) => {\n\n    const [ { description }, handleInputChange, reset ] = useForm({\n        description: ''\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( description.trim().length <= 1 ) {\n            return;\n        }\n\n        const newTodo = {\n            id: new Date().getTime(),\n            desc: description,\n            done: false\n        };\n        \n        handleAddTodo( newTodo );\n        reset();\n        \n    }\n\n\n    return (\n        <>\n            <h4>Agregar TODO</h4>\n            <hr />\n\n            <form onSubmit={ handleSubmit }>\n\n                <input \n                    type=\"text\"\n                    name=\"description\"\n                    className=\"form-control\"\n                    placeholder=\"Aprender ...\"\n                    autoComplete=\"off\"\n                    value={ description }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary mt-1 btn-block\"\n                >\n                    Agregar\n                </button>\n\n\n            </form>\n            \n        </>\n    )\n}\n","import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React, { useReducer, useEffect } from 'react';\nimport { todoReducer } from './todoReducer';\n\nimport { TodoList } from './TodoList';\nimport { TodoAdd } from './TodoAdd';\nimport './styles.css';\n\nconst init = () => {\n\n    return JSON.parse(localStorage.getItem('todos')) || [];\n\n}\n\nexport const TodoApp = () => {\n\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\n    \n    useEffect( ()=> {\n        localStorage.setItem('todos', JSON.stringify( todos ) );\n    }, [todos]);\n\n\n    const handleDelete = ( todoId ) => {\n\n        const action = {\n            type: 'delete',\n            payload: todoId\n        }\n\n        dispatch( action );\n    }\n\n    const handleToggle = ( todoId ) =>{\n        \n        dispatch({\n            type: 'toggle',\n            payload: todoId\n        });\n\n    }\n\n    const handleAddTodo = ( newTodo ) => {\n        \n        dispatch({\n            type: 'add',\n            payload: newTodo\n        });\n\n    }\n\n\n    return (\n        <div>\n            <h1>TodoApp ( { todos.length } ) </h1>\n            <hr />\n\n            <div className=\"row\">\n\n                <div className=\"col-7\">\n\n                    <TodoList \n                        todos={ todos }\n                        handleDelete={ handleDelete }\n                        handleToggle={ handleToggle }\n                    />\n\n                </div>\n\n\n                <div className=\"col-5\">\n                    \n                    <TodoAdd \n                        handleAddTodo={ handleAddTodo }\n                    />\n                    \n\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import { HookApp } from './HookApp';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n// import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// import { FormWithCustomHook } from './components/02-useEffect/FormWithCustomHook';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n// import { Layout } from './components/05-useLayoutEffect/Layout';\n// import { Memorize } from './components/06-memos/Memorize';\n// import { MemoHook } from './components/06-memos/MemoHook';\n// import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n\n\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}